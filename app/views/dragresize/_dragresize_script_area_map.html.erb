<%= javascript_include_tag "dragresize/dragresize.js" %>

<style type="text/css">

    /* Required CSS classes: must be included in all pages using this script */

    /* Apply the element you want to drag/resize */
    .drsElement {
        position: absolute;
        border: 1px solid #333;
        height: 100px;
        width: 100px;
    }

        /*
         The main mouse handle that moves the whole element.
         You can apply to the same tag as drsElement if you want.
        */
    .drsMoveHandle {
        height: 20px;
        border-bottom: 1px solid #666;
        cursor: move;
    }

        /*
         The DragResize object name is automatically applied to all generated
         corner resize handles, as well as one of the individual classes below.
        */
    .dragresize {
        position: absolute;
        width: 5px;
        height: 5px;
        font-size: 1px;
        background: #EEE;
        border: 1px solid #333;
    }

        /*
         Individual corner classes - required for resize support.
         These are based on the object name plus the handle ID.
        */
    .dragresize-tl {
        top: -8px;
        left: -8px;
        cursor: nw-resize;
    }

    .dragresize-tm {
        top: -8px;
        left: 50%;
        margin-left: -4px;
        cursor: n-resize;
    }

    .dragresize-tr {
        top: -8px;
        right: -8px;
        cursor: ne-resize;
    }

    .dragresize-ml {
        top: 50%;
        margin-top: -4px;
        left: -8px;
        cursor: w-resize;
    }

    .dragresize-mr {
        top: 50%;
        margin-top: -4px;
        right: -8px;
        cursor: e-resize;
    }

    .dragresize-bl {
        bottom: -8px;
        left: -8px;
        cursor: sw-resize;
    }

    .dragresize-bm {
        bottom: -8px;
        left: 50%;
        margin-left: -4px;
        cursor: s-resize;
    }

    .dragresize-br {
        bottom: -8px;
        right: -8px;
        cursor: se-resize;
    }

</style>

<script type="text/javascript">
    //<![CDATA[

    // Using DragResize is simple!
    // You first declare a new DragResize() object, passing its own name and an object
    // whose keys constitute optional parameters/settings:

    var dragresize = new DragResize('dragresize',
    { minWidth: 25, minHeight: 25, minLeft: 0, minTop: 0, maxLeft: 600, maxTop: 500 });

    // Optional settings/properties of the DragResize object are:
    //  enabled: Toggle whether the object is active.
    //  handles[]: An array of drag handles to use (see the .JS file).
    //  minWidth, minHeight: Minimum size to which elements are resized (in pixels).
    //  minLeft, maxLeft, minTop, maxTop: Bounding box (in pixels).

    // Next, you must define two functions, isElement and isHandle. These are passed
    // a given DOM element, and must "return true" if the element in question is a
    // draggable element or draggable handle. Here, I'm checking for the CSS classname
    // of the elements, but you have have any combination of conditions you like:

    dragresize.isElement = function(elm)
    {
        if (elm.className && elm.className.indexOf('drsElement') > -1) return true;
    };
    dragresize.isHandle = function(elm)
    {
        if (elm.className && elm.className.indexOf('drsMoveHandle') > -1) return true;
    };

    // You can define optional functions that are called as elements are dragged/resized.
    // Some are passed true if the source event was a resize, or false if it's a drag.
    // The focus/blur events are called as handles are added/removed from an object,
    // and the others are called as users drag, move and release the object's handles.
    // You might use these to examine the properties of the DragResize object to sync
    // other page elements, etc.

    dragresize.ondragfocus = function() {
    };
    dragresize.ondragstart = function(isResize) {
    };
    dragresize.ondragmove = function(isResize) {
    };
    dragresize.ondragend = function(isResize) {
        min_x = this.element.style.left;
        max_x = this.element.style.width + min_x;
        min_y = this.element.style.top;
        max_y = this.element.style.height + min_y;
        map_id = this.element.id.split('_')[1];

        new Ajax.Request('/area_maps/save_area_map?field=<%=field%>&min_x=' + min_x + '&max_x=' + max_x + '&min_y=' + min_y + '&max_y=' + max_y + '&map_id=' + map_id + '', {asynchronous:true, evalScripts:true, parameters:'authenticity_token=' + encodeURIComponent('fcdc66c78643c9aef5bea0cf075e79ee3c96cac9')});
    };
    dragresize.ondragblur = function() {
    };
    // Finally, you must apply() your DragResize object to a DOM node; all children of this
    // node will then be made draggable. Here, I'm applying to the entire document.
    dragresize.apply(document);

    //]]>
</script>

